{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sharing page","text":"<p>Read the code</p> <p>The aim of this project is to create a web interface that shows filtered content based on the used login.</p> <p>For example, you may want to show pictures of your dog to one group of people and photos of your last trip to another group.</p> <p>This small Python script lets you add people to groups and define which group has access to each ressource.</p> <p>For my needs, it was easier to hardcode user information into the script so the project isn't suited for large audiences.</p>"},{"location":"doc/","title":"Documentation","text":""},{"location":"doc/#script-configuration","title":"Script configuration","text":"<ul> <li>Copy all the files to <code>/var/www/html/sharing</code> for example. </li> <li>Make all the <code>*.py</code> files executable by Apache.</li> <li>Open <code>Management.py</code>, this file is used to configure everything. </li> </ul> <p>This file is divided in two parts. </p> <p>This page is not finished yet.</p>"},{"location":"doc/#how-it-works","title":"How it works","text":"<p>The page the user sees is the output of a Python script.</p> <p>The script itself is devided into two pieces:</p> <ul> <li>The \"Management\" part is used to store information about users and content</li> <li>The \"Main\" part is used to display the page.</li> </ul> <p>Since the scale of my project is very small, I decided to hardcode users and content into Python lists rather than work with text files.</p>"},{"location":"doc/#configuration-guide","title":"Configuration guide","text":"<p>This documentation expects you to have a working Apache server.</p> <p>Python is required</p> <p>This is intended for Debian</p> <p>The process might be slightly different with other flavours.</p>"},{"location":"doc/#script-configuration_1","title":"Script configuration","text":"<p>Copy the contents of the release to <code>/var/www/html/sharing</code>.</p> <p>Make all the <code>*.py</code> files executeable by Apache.</p> <p>Default users</p> <p>There are two default users and one default group:</p> <ul> <li>Content associated with the \"everyone\" group is seen by all users regardless of their appartenance</li> <li>\"None\" is used when a user isn't authenticated. He has access to the \"everyone\" group</li> <li>\"admin\" has access to all content.</li> </ul>"},{"location":"doc/#apache-configuration","title":"Apache configuration","text":"<p>First, create a new directory in <code>/var/www/html</code>. Let's name it <code>sharing</code>. Next, paste all the files there and make all the <code>*.py</code> files executeable.</p> <p>Create users that will have access to the page. First, create the files <code>/etc/apache2/passwd/passwd</code> and <code>/etc/apache2/passwd/groups</code>. Next, add users and their passwords using</p> <pre><code>htpasswd /etc/apache2/passwd/passwd username\n</code></pre> <p>Then open the groups file and add the users to the group <code>sharing</code> as follows:</p> /etc/apache2/passwd/groups<pre><code>sharing: user1 user2 user3\n</code></pre> <p>You need to configure Apache so it would run Python. The following is to be added into the Apache2 configuration file. Make sure to customize folder names and anything else you might change. The following changes are:</p> <ul> <li>Allow Apache to run Python scripts</li> <li>Set the index to <code>index.py</code></li> <li>Require authentication to access the directory<ul> <li>Users must be part of the \"sharing\" group</li> </ul> </li> </ul> /etc/apache2/Apache2.conf<pre><code>&lt;Directory /var/www/html/sharing/&gt;\n    Options Indexes FollowSymLinks ExecCGI\n    AddHandler cgi-script /py .cgi\n    LoadModule cgi_module /usr/lib/apache2/modules/mod_cgi.so\n    AllowOverride None\n    Require all granted\n    DirectoryIndex index.py\n    AuthType Basic\n    AuthName \"Restricted content'\n    AuthUserFile \"/etc/apache2/passwd/passwd\"\n    AuthGroupFile \"/etc/apache2/passwd/groups\"\n    Require group sharing\n&lt;/Directory&gt;\n</code></pre> <p>Restart Apache for changes to take effect. </p>"}]}